# setup nginx reverse proxy for the microservice
worker_processes  4;    # number of worker processes;
error_log  /var/log/nginx/error.log warn;
events {
    worker_connections  1024;  # max number of simultaneous connections that can be opened by a worker process
}
http {
    charset utf-8; # sets the default charset for all text files
    include       mime.types; # mime.types file contains the mapping between a file extension and the MIME type
    default_type  application/octet-stream; # default MIME type to use if a file extension is not found in the mime.types file
    sendfile        on; # enables the use of sendfile system call which performs much better than read() and write() system calls
    keepalive_timeout  65; # timeout for keep-alive connections
    server {
        listen       80; # port to listen on
        server_name  localhost;
        # root or the entry point of the application
        location / {
            proxy_pass http://localhost:7000; # proxy_pass directive specifies the address of the proxied server and the URI to which a location should be mapped
            proxy_http_version 1.1; # sets the HTTP version
            proxy_set_header Host $host; # sets the Host request header
            proxy_set_header Upgrade $http_upgrade; # sets the Upgrade request header
            proxy_set_header Connection "upgrade"; # sets the Connection request header
            proxy_cache_bypass $http_upgrade; # sets the Cache-Control request header
            # proxy_set_header X-Real-IP $remote_addr; # sets the X-Real-IP request header
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # sets the X-Forwarded-For request header
            # proxy_set_header X-Forwarded-Proto $scheme; # sets the X-Forwarded-Proto request header

        }
        # microservices endpoints: Auth;
        location ~ ^/auth {
            rewrite ^/auth/(.*) /$1 break; // remove the /auth prefix
            proxy_pass http://auth:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
        # microservices endpoints: Production;
        location ~ ^/production {
            rewrite ^/production/(.*) /$1 break; // remove the /production prefix
            proxy_pass http://production:9000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
        # microservices endpoints: Promptify;
        location ~ ^/promptify {
            rewrite ^/promptify/(.*) /$1 break; // remove the /promptify prefix
            proxy_pass http://promptify:5000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
        # microservices endpoints: Prompts;
        location ~ ^/prompts {
            rewrite ^/prompts/(.*) /$1 break; // remove the /prompts prefix
            proxy_pass http://prompts:6000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
    }
}